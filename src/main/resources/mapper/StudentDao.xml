<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gyb.demo.dao.StudentDao">
  <resultMap id="BaseResultMap" type="com.gyb.demo.bean.Student">
    <id column="student_s_id" jdbcType="INTEGER" property="sId" />
    <result column="student_s_name" jdbcType="VARCHAR" property="sName" />
    <result column="student_s_birth" jdbcType="VARCHAR" property="sBirth" />
    <result column="student_s_sex" jdbcType="VARCHAR" property="sSex" />
    <result column="student_s_address" jdbcType="VARCHAR" property="sAddress" />
    <result column="student_s_message" jdbcType="VARCHAR" property="sMessage" />
    <result column="student_s_test_1" jdbcType="VARCHAR" property="sTest1" />
    <result column="student_s_test_2" jdbcType="VARCHAR" property="sTest2" />
    <result column="student_s_test_3" jdbcType="VARCHAR" property="sTest3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student.s_id as student_s_id, student.s_name as student_s_name, student.s_birth as student_s_birth, 
    student.s_sex as student_s_sex, student.s_address as student_s_address, student.s_message as student_s_message, 
    student.s_test_1 as student_s_test_1, student.s_test_2 as student_s_test_2, student.s_test_3 as student_s_test_3
  </sql>
  <select id="selectByExample" parameterType="com.gyb.demo.bean.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student student
    where student.s_id = #{sId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where s_id = #{sId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gyb.demo.bean.StudentExample">
    delete from student student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="s_id" keyProperty="sId" parameterType="com.gyb.demo.bean.Student" useGeneratedKeys="true">
    insert into student (s_name, s_birth, s_sex, 
      s_address, s_message, s_test_1, 
      s_test_2, s_test_3)
    values (#{sName,jdbcType=VARCHAR}, #{sBirth,jdbcType=VARCHAR}, #{sSex,jdbcType=VARCHAR}, 
      #{sAddress,jdbcType=VARCHAR}, #{sMessage,jdbcType=VARCHAR}, #{sTest1,jdbcType=VARCHAR}, 
      #{sTest2,jdbcType=VARCHAR}, #{sTest3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="s_id" keyProperty="sId" parameterType="com.gyb.demo.bean.Student" useGeneratedKeys="true">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sName != null">
        s_name,
      </if>
      <if test="sBirth != null">
        s_birth,
      </if>
      <if test="sSex != null">
        s_sex,
      </if>
      <if test="sAddress != null">
        s_address,
      </if>
      <if test="sMessage != null">
        s_message,
      </if>
      <if test="sTest1 != null">
        s_test_1,
      </if>
      <if test="sTest2 != null">
        s_test_2,
      </if>
      <if test="sTest3 != null">
        s_test_3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sName != null">
        #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sBirth != null">
        #{sBirth,jdbcType=VARCHAR},
      </if>
      <if test="sSex != null">
        #{sSex,jdbcType=VARCHAR},
      </if>
      <if test="sAddress != null">
        #{sAddress,jdbcType=VARCHAR},
      </if>
      <if test="sMessage != null">
        #{sMessage,jdbcType=VARCHAR},
      </if>
      <if test="sTest1 != null">
        #{sTest1,jdbcType=VARCHAR},
      </if>
      <if test="sTest2 != null">
        #{sTest2,jdbcType=VARCHAR},
      </if>
      <if test="sTest3 != null">
        #{sTest3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gyb.demo.bean.StudentExample" resultType="java.lang.Long">
    select count(*) from student student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student student
    <set>
      <if test="record.sId != null">
        student.s_id = #{record.sId,jdbcType=INTEGER},
      </if>
      <if test="record.sName != null">
        student.s_name = #{record.sName,jdbcType=VARCHAR},
      </if>
      <if test="record.sBirth != null">
        student.s_birth = #{record.sBirth,jdbcType=VARCHAR},
      </if>
      <if test="record.sSex != null">
        student.s_sex = #{record.sSex,jdbcType=VARCHAR},
      </if>
      <if test="record.sAddress != null">
        student.s_address = #{record.sAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.sMessage != null">
        student.s_message = #{record.sMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.sTest1 != null">
        student.s_test_1 = #{record.sTest1,jdbcType=VARCHAR},
      </if>
      <if test="record.sTest2 != null">
        student.s_test_2 = #{record.sTest2,jdbcType=VARCHAR},
      </if>
      <if test="record.sTest3 != null">
        student.s_test_3 = #{record.sTest3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student student
    set student.s_id = #{record.sId,jdbcType=INTEGER},
      student.s_name = #{record.sName,jdbcType=VARCHAR},
      student.s_birth = #{record.sBirth,jdbcType=VARCHAR},
      student.s_sex = #{record.sSex,jdbcType=VARCHAR},
      student.s_address = #{record.sAddress,jdbcType=VARCHAR},
      student.s_message = #{record.sMessage,jdbcType=VARCHAR},
      student.s_test_1 = #{record.sTest1,jdbcType=VARCHAR},
      student.s_test_2 = #{record.sTest2,jdbcType=VARCHAR},
      student.s_test_3 = #{record.sTest3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gyb.demo.bean.Student">
    update student
    <set>
      <if test="sName != null">
        s_name = #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sBirth != null">
        s_birth = #{sBirth,jdbcType=VARCHAR},
      </if>
      <if test="sSex != null">
        s_sex = #{sSex,jdbcType=VARCHAR},
      </if>
      <if test="sAddress != null">
        s_address = #{sAddress,jdbcType=VARCHAR},
      </if>
      <if test="sMessage != null">
        s_message = #{sMessage,jdbcType=VARCHAR},
      </if>
      <if test="sTest1 != null">
        s_test_1 = #{sTest1,jdbcType=VARCHAR},
      </if>
      <if test="sTest2 != null">
        s_test_2 = #{sTest2,jdbcType=VARCHAR},
      </if>
      <if test="sTest3 != null">
        s_test_3 = #{sTest3,jdbcType=VARCHAR},
      </if>
    </set>
    where s_id = #{sId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gyb.demo.bean.Student">
    update student
    set s_name = #{sName,jdbcType=VARCHAR},
      s_birth = #{sBirth,jdbcType=VARCHAR},
      s_sex = #{sSex,jdbcType=VARCHAR},
      s_address = #{sAddress,jdbcType=VARCHAR},
      s_message = #{sMessage,jdbcType=VARCHAR},
      s_test_1 = #{sTest1,jdbcType=VARCHAR},
      s_test_2 = #{sTest2,jdbcType=VARCHAR},
      s_test_3 = #{sTest3,jdbcType=VARCHAR}
    where s_id = #{sId,jdbcType=INTEGER}
  </update>
</mapper>